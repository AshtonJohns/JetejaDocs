{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to JetejaDocs This is the official documentation site for the Jeteja Project. Here, you\u2019ll find everything you need to install, configure, and start using Jeteja. We provide detailed guides for setup, parts, and usage, along with active development updates and demos to help you get the most out of the project. Quick Links Installation Instructions \u2013 Step-by-step setup guide. Parts List \u2013 Complete list of components and specifications. Getting It Running \u2013 Initial run and configuration details. Demos \u2013 Explore the project in action. Active Development \u2013 What\u2019s currently in progress.","title":"Home"},{"location":"#welcome-to-jetejadocs","text":"This is the official documentation site for the Jeteja Project. Here, you\u2019ll find everything you need to install, configure, and start using Jeteja. We provide detailed guides for setup, parts, and usage, along with active development updates and demos to help you get the most out of the project.","title":"Welcome to JetejaDocs"},{"location":"#quick-links","text":"Installation Instructions \u2013 Step-by-step setup guide. Parts List \u2013 Complete list of components and specifications. Getting It Running \u2013 Initial run and configuration details. Demos \u2013 Explore the project in action. Active Development \u2013 What\u2019s currently in progress.","title":"Quick Links"},{"location":"active_development/","text":"","title":"Active Development"},{"location":"demos/","text":"","title":"Demos"},{"location":"description/","text":"","title":"Description"},{"location":"getting_it_running/","text":"","title":"Getting it Running"},{"location":"installation/","text":"Installation Guide This guide will help you set up the project on your system. Required Software Ensure the following software is installed before proceeding: ROS 2 Humble realsense2_camera ROS 2 package sudo apt install ros-humble-realsense2-camera rplidar ros2 package sudo apt install ros-humble-rplidar teleop_twist_joy package sudo apt install ros-humble-teleop_twist_joy mpremote pip install mpremote Building the Workspace Open a terminal and navigate to your workspace directory: cd ~/jeteja_ws Clone the repository to your workspace directory: git clone https://github.com/AshtonJohns/UCAJetson.git Build the project : colcon build Simplify Access for Future Sessions To automatically source your workspace setup each time you open a terminal, add the following lines to your ~/.bashrc file : source ~/jeteja_ws/install/setup.py source /opt/ros/humble/install/setup.py","title":"Installation Instructions"},{"location":"installation/#installation-guide","text":"This guide will help you set up the project on your system.","title":"Installation Guide"},{"location":"installation/#required-software","text":"Ensure the following software is installed before proceeding: ROS 2 Humble realsense2_camera ROS 2 package sudo apt install ros-humble-realsense2-camera rplidar ros2 package sudo apt install ros-humble-rplidar teleop_twist_joy package sudo apt install ros-humble-teleop_twist_joy mpremote pip install mpremote","title":"Required Software"},{"location":"installation/#building-the-workspace","text":"Open a terminal and navigate to your workspace directory: cd ~/jeteja_ws Clone the repository to your workspace directory: git clone https://github.com/AshtonJohns/UCAJetson.git Build the project : colcon build","title":"Building the Workspace"},{"location":"installation/#simplify-access-for-future-sessions","text":"To automatically source your workspace setup each time you open a terminal, add the following lines to your ~/.bashrc file : source ~/jeteja_ws/install/setup.py source /opt/ros/humble/install/setup.py","title":"Simplify Access for Future Sessions"},{"location":"parts_list/","text":"","title":"Parts List"},{"location":"progress_log/","text":"Using tensorflow Workstation (Ubuntu 20.04, 5950X, rtx3080) Install CUDA Toolkit https://developer.nvidia.com/cuda-downloads These were my options: * Operating System: Linux * Architecture: x86_64 * Distribution: Ubuntu 20.04 * Version: Latest (e.g., CUDA 12.0) Add CUDA paths echo 'export PATH=/usr/local/cuda/bin:$PATH' >> ~/.bashrc echo 'export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH' >> ~/.bashrc source ~/.bashrc Verify installation nvcc --version Install cuDNN https://developer.nvidia.com/cudnn Verify your options Training and optimizing Install requirements.txt cd ~/jeteja_robot pip install -r requirements.txt Install python virtual environment sudo apt install -y python3-venv Create the virtual environment python3 -m venv tf-gpu source tf-gpu/bin/activate Verify TensorFlow and GPU support python -c \"import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))\" Jetson Orin Nano (Jetpack 6.1) Install tensorflow https://docs.nvidia.com/deeplearning/frameworks/install-tf-jetson-platform/index.html or for jp 6.1, sudo pip3 install --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v61 tensorflow==2.16.1+nv24.08 You might need to downgrade your numpy. To test, run the following for GPU support: python3 -c \"import tensorflow as tf; print(tf.config.list_physical_devices())\" Possible issue fixes Set OpenMP Environment Variable export LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgomp.so.1 Enable TensorFlow\u2019s cuda_malloc_async Allocator export TF_GPU_ALLOCATOR=cuda_malloc_async Copying from jetson to powerful computer Rsync rsync -avz [source-username]@[source-IP]:/path/to/source/ /path/to/destination/","title":"Progress Log"},{"location":"progress_log/#using-tensorflow","text":"","title":"Using tensorflow"},{"location":"progress_log/#workstation-ubuntu-2004-5950x-rtx3080","text":"","title":"Workstation (Ubuntu 20.04, 5950X, rtx3080)"},{"location":"progress_log/#install-cuda-toolkit","text":"https://developer.nvidia.com/cuda-downloads These were my options: * Operating System: Linux * Architecture: x86_64 * Distribution: Ubuntu 20.04 * Version: Latest (e.g., CUDA 12.0)","title":"Install CUDA Toolkit"},{"location":"progress_log/#add-cuda-paths","text":"echo 'export PATH=/usr/local/cuda/bin:$PATH' >> ~/.bashrc echo 'export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH' >> ~/.bashrc source ~/.bashrc","title":"Add CUDA paths"},{"location":"progress_log/#verify-installation","text":"nvcc --version","title":"Verify installation"},{"location":"progress_log/#install-cudnn","text":"https://developer.nvidia.com/cudnn Verify your options","title":"Install cuDNN"},{"location":"progress_log/#training-and-optimizing","text":"","title":"Training and optimizing"},{"location":"progress_log/#install-requirementstxt","text":"cd ~/jeteja_robot pip install -r requirements.txt","title":"Install requirements.txt"},{"location":"progress_log/#install-python-virtual-environment","text":"sudo apt install -y python3-venv","title":"Install python virtual environment"},{"location":"progress_log/#create-the-virtual-environment","text":"python3 -m venv tf-gpu source tf-gpu/bin/activate","title":"Create the virtual environment"},{"location":"progress_log/#verify-tensorflow-and-gpu-support","text":"python -c \"import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))\"","title":"Verify TensorFlow and GPU support"},{"location":"progress_log/#jetson-orin-nano-jetpack-61","text":"","title":"Jetson Orin Nano (Jetpack 6.1)"},{"location":"progress_log/#install-tensorflow","text":"https://docs.nvidia.com/deeplearning/frameworks/install-tf-jetson-platform/index.html or for jp 6.1, sudo pip3 install --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v61 tensorflow==2.16.1+nv24.08 You might need to downgrade your numpy. To test, run the following for GPU support: python3 -c \"import tensorflow as tf; print(tf.config.list_physical_devices())\"","title":"Install tensorflow"},{"location":"progress_log/#possible-issue-fixes","text":"","title":"Possible issue fixes"},{"location":"progress_log/#set-openmp-environment-variable","text":"export LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgomp.so.1","title":"Set OpenMP Environment Variable"},{"location":"progress_log/#enable-tensorflows-cuda_malloc_async-allocator","text":"export TF_GPU_ALLOCATOR=cuda_malloc_async","title":"Enable TensorFlow\u2019s cuda_malloc_async Allocator"},{"location":"progress_log/#copying-from-jetson-to-powerful-computer","text":"","title":"Copying from jetson to powerful computer"},{"location":"progress_log/#rsync","text":"rsync -avz [source-username]@[source-IP]:/path/to/source/ /path/to/destination/","title":"Rsync"},{"location":"requirements/","text":"","title":"Requirements"},{"location":"updating_site/","text":"Updating this github page be on master branch write changes / commit changes in root of github repository, execute mkdocs gh-deploy Updating .md files content goes here to display those pages and make style changes, be sure to include them on the mkdocs.yml file","title":"Updating this Site"},{"location":"updating_site/#updating-this-github-page","text":"be on master branch write changes / commit changes in root of github repository, execute mkdocs gh-deploy","title":"Updating this github page"},{"location":"updating_site/#updating-md-files","text":"content goes here to display those pages and make style changes, be sure to include them on the mkdocs.yml file","title":"Updating .md files"}]}